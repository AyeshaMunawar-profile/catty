{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/common/Scroll/Scroll.js","components/common/Error Boundary/ErrorBoundary.js","containers/App/App.js","reportWebVitals.js","index.js"],"names":["Card","this","props","id","name","username","email","className","src","alt","Component","CardList","cats","length","map","cat","index","Header","headingText","SearchBar","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","borderRadius","children","ErrorBoundary","state","hasError","error","errorInfo","setState","App","useState","setCats","searchField","setSearchField","useEffect","fetch","then","response","json","filteredCats","filter","toLowerCase","includes","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mVA0BeA,E,4JAtBX,WACI,MAAoCC,KAAKC,MAAlCC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,MAC3B,OACI,mCACI,sBACIC,UAAU,uGADd,UAEI,qBAAKC,IAAG,+BAA0BL,EAA1B,0BAAsDM,IAAI,QAClE,sBAAKF,UAAU,eAAf,UACI,oBAAIA,UAAU,yCAAd,SACKH,IAEL,oBAAIG,UAAU,yBAAd,SACK,IAAMF,IAEX,mBAAGE,UAAU,gBAAb,SAA8BD,gB,GAfnCI,aC0BJC,E,4JAxBX,WAEI,IAAMC,EAAOX,KAAKC,MAAMU,KACxB,OACI,mCACI,qBAAKL,UAAU,yDAAf,SACKK,EAAKC,OACFD,EAAKE,KAAI,SAACC,EAAKC,GACX,OACI,cAAC,EAAD,CACIZ,KAAMQ,EAAKI,GAAOZ,KAClBE,MAAOM,EAAKI,GAAOV,MACnBD,SAAUO,EAAKI,GAAOX,SACtBF,GAAIS,EAAKI,GAAOb,IACXa,MAEZ,oBAAIT,UAAU,oBAAd,iC,GAjBNG,aCWRO,G,kKAXX,WACI,OACI,mCACI,qBAAKV,UAAU,6CAAf,SACI,oBAAIA,UAAU,sCAAd,SAAqDN,KAAKC,MAAMgB,sB,GAL/DR,cCgBNS,G,kKAfX,WACI,IAAMC,EAAenB,KAAKC,MAAMkB,aAChC,OACI,mCACI,qBAAKb,UAAU,0BAAf,SACI,uBAAOc,KAAK,SACLC,YAAY,yBACZf,UAAU,6DACVgB,SAAUH,Y,GATbV,cCcTc,G,MAdA,SAACtB,GACZ,OACI,qBAAKK,UAAU,gCACXkB,MAAO,CACHC,UAAW,SACXC,OAAQ,qBACRC,OAAQ,QACRC,aAAc,QALtB,SAOK3B,EAAM4B,aCWJC,E,kDApBX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBlC,KAAKmC,SAAS,CAACH,UAAU,M,oBAG7B,WACI,OAAIhC,KAAK+B,MAAMC,SACJ,oBAAI1B,UAAU,4BAAd,gDAEAN,KAAKC,MAAM4B,a,GAhBFpB,aCiDb2B,EA3CH,WAER,MAAwBC,mBAAS,IAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAQAC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhC,GACF2B,EAAQ3B,QAEjB,IAEH,IAIMmC,EAAenC,EAAKoC,QAAO,SAAAjC,GAC7B,OAAOA,EAAIX,KAAK6C,cAAcC,SAASV,EAAYS,kBAGvD,OACI,mCACI,sBAAK1C,UAAU,MAAf,UACI,cAAC,EAAD,CAAQW,YAAY,UACpB,cAAC,EAAD,CAAWE,aAZA,SAAC+B,GACpBV,EAAeU,EAAMC,OAAOC,UAYpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzC,KAAMmC,cC9BzBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.637d3099.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./Card.css\"\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const {id, name, username, email} = this.props;\r\n        return (\r\n            <>\r\n                <div\r\n                    className='card bg-light-yellow br3 pa3-l pa3-m p1 ma3 grow dib bw2 shadow-5 tc pt5-l pb5-l pt5-m pb5-m pt4 pb4'>\r\n                    <img src={`https://robohash.org/${id}?size=200x200&set=set4`} alt='cat'/>\r\n                    <div className=\"card-details\">\r\n                        <h2 className=\"card-title mt3 mb3 f2 f-cartoon normal\">\r\n                            {name}\r\n                        </h2>\r\n                        <h3 className=\"card-username mb2 f4 b\">\r\n                            {\"@\" + username}\r\n                        </h3>\r\n                        <p className=\"card-email f5\">{email}</p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, {Component} from \"react\";\r\nimport \"./CardList.css\"\r\nimport Card from \"../Card/Card\";\r\n\r\nclass CardList extends Component {\r\n    render() {\r\n        // in case if you need error handling use throw new Error(\"message\")\r\n        const cats = this.props.cats;\r\n        return (\r\n            <>\r\n                <div className=\"card-list tc pa2 pt0 mt5-ls mb5-ls mt3-m mb3-m mt3 mb3\">\r\n                    {cats.length ?\r\n                        cats.map((cat, index) => {\r\n                            return (\r\n                                <Card\r\n                                    name={cats[index].name}\r\n                                    email={cats[index].email}\r\n                                    username={cats[index].username}\r\n                                    id={cats[index].id}\r\n                                    key={index}/>\r\n                            )\r\n                        }) : <h1 className=\"white f1 mt6 grow\">Loading ...</h1>\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardList;\r\n","import React, {Component} from \"react\";\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"header tc pt3-l pb3-l pt2-m pb2-m pt2 pb2 \">\r\n                    <h1 className='f-headline lh-title f-cartoon white'>{this.props.headingText}</h1>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n    render() {\r\n        const searchChange = this.props.searchChange;\r\n        return (\r\n            <>\r\n                <div className=\"pa3 tc mb6-ls mb4-m mb5\">\r\n                    <input type=\"search\"\r\n                           placeholder=\"find a cat by name ...\"\r\n                           className=\"search-bar pa3 ba b--yellow bg-white-90 w-50-l w-60-m w-90\"\r\n                           onChange={searchChange}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"scrollable ma3-m ma5-l ma2-ns\"\r\n            style={{\r\n                overflowY: 'scroll',\r\n                border: '10px solid #fbf1a9',\r\n                height: '50rem',\r\n                borderRadius: '20px'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1 className=\"f-cartoon tc white f2 mt5\"> Oooops ! Something went wrong ...</h1>\r\n        } else {\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\nimport CardList from \"../../components/CardList/CardList\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport Scroll from \"../../components/common/Scroll/Scroll\";\r\nimport ErrorBoundary from \"../../components/common/Error Boundary/ErrorBoundary\";\r\n\r\nconst App = () => {\r\n\r\n    const [cats, setCats] = useState([]);\r\n    const [searchField, setSearchField] = useState(\"\");\r\n\r\n    // use effect adds the ability to perform sideeffects from a function component . It has the same effect as componentDidMount componentWillMount , componentDidUpdate\r\n\r\n    // called when ever the page renders \r\n\r\n    // in the second argument tell the useeffect when to run it (what changes to make it run) bacause otherwise when App component initializes useEffect runs state changes (cats) because of which App rerenders then again runs useEffect again state changes and the cycle continues sending empty array makes it to run only once (asically works like componentDidMount) \r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(cats => {\r\n                setCats(cats);\r\n            });\r\n    }, []);\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchField(event.target.value);\r\n    }\r\n\r\n    const filteredCats = cats.filter(cat => {\r\n        return cat.name.toLowerCase().includes(searchField.toLowerCase())\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app\">\r\n                <Header headingText=\"Catty\" />\r\n                <SearchBar searchChange={onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList cats={filteredCats} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}